#define PY_SSIZE_T_CLEAN
#include "Python.h"
#include "jit/craft_common.c"


PyObject * craft_main(
    PyObject * ARGS,
    PyObject * SYMBOL_TABLE,
	PyObject * BRANCHES
)
{
    // Stop Python from interpreting anything else while we use this thread
    PyGILState_STATE gstate = PyGILState_Ensure();

    // Define convenience variables for lookups/etc.
    PyObject * scope0 = PyList_GetItem(SYMBOL_TABLE, 0);
    PyObject * query = PyDict_GetItemString(scope0, "query-symbol-table");
	PyObject * program = PyDict_GetItemString(scope0, "Program");
    PyObject * eval = PyDict_GetItemString(scope0, "eval");
    PyObject * scope = PyDict_GetItemString(scope0, "get-scope");
    PyObject * get_result = PyDict_GetItemString(scope0, "get-result");
    
    // Exceptions
    PyObject * CraftException 				= PyDict_GetItemString(scope0, "CraftException");
    PyObject * CraftInternalException 		= PyDict_GetItemString(scope0, "CraftInternalException");
    PyObject * CraftFunctionReturnException = PyDict_GetItemString(scope0, "CraftFunctionReturnException");
    PyObject * CraftLoopBreakException 		= PyDict_GetItemString(scope0, "CraftLoopBreakException");
    PyObject * CraftLoopContinueException 	= PyDict_GetItemString(scope0, "CraftLoopContinueException");


	//printf("Here\n");
    /*
	PyObject * __print = PyDict_GetItemString(scope0, "print");
	PyObject * stuff = PyList_GetItem(BRANCHES, 0);
	PyObject_Call(eval, Py_BuildValue("(O)", stuff), NULL);
	if (PyErr_Occurred())
    {
        PyErr_Print();
	}
    */
