Wing Programming Language



 - Solidify data types
 	- list, hash, int, etc.
 	- Make custom types: wing_file, etc.
 	
 - How to open file
 - importing/including
 - Sublime text syntax highlighting





1.  Print
2.  Math operators: - / * + % **
3.  Bitwise operators: & | ^
4.  Equality: = is < > <= >= (<> | !=)
5.  Logical keywords: and or not
6.  def fn call
7.  Program comment
8.  if then else
9.  switch case default
10. import (imported and evaluated) | include (imported but not evaluated)
11. for (while | until) foreach
12. exit quit
13. globals
14. push-scope, pop-scope, create-named-scope
15. str, int, bool, float
16. Hash (create dictionary since YAML is not friendly)




Description:

Blah


Functional Requirements:

1. Run Software written in Wing
	WINGF1.1 Must be able to invoke the Wing interpreter via the command line.



Non-Functional Requirements:

1. Security
	WINGNF1.1 Access to the underlying interpreter infrastructure must be
		severely limited or completely denied.